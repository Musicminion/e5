#########################################
#                                       #
#        请务必阅读配置之后再启动项目！      #
#                                       #
#########################################

# 你需要准备好域名,并且在域名解析中配置好解析到你的服务器的ip

# 在生产环境搭建时，需要配置Github的有：
# github.client_id
# github.client_secret
# github.replyUrl=
# 这三个都是在Github配置的时候就有

# 通过环境变量读取
spring.profiles.active=${SPRING_PROFILES_ACTIVE}
isdebug=${ISDEBUG}
server.port= ${SERVER_PORT}

# 数据库的配置，只需要修改password的即可
spring.datasource.dynamic.primary=${SPRING_DATASOURCE_DYNAMIC_PRIMARY}
spring.datasource.dynamic.strict=${SPRING_DATASOURCE_DYNAMIC_STRICT}
spring.datasource.dynamic.datasource.master.url=${SPRING_DATASOURCE_DYNAMIC_DATASOURCE_MASTER_URL}
spring.datasource.dynamic.datasource.master.username=${SPRING_DATASOURCE_DYNAMIC_DATASOURCE_MASTER_USERNAME}
spring.datasource.dynamic.datasource.master.password=${SPRING_DATASOURCE_DYNAMIC_DATASOURCE_MASTER_PASSWORD}
spring.datasource.dynamic.datasource.master.driver-class-name=${SPRING_DATASOURCE_DYNAMIC_DATASOURCE_MASTER_DRIVER_CLASS_NAME}

# Github的配置信息
github.host=${GITHUB_HOST}
github.api_host=${GITHUB_API_HOST}
github.client_id=${GITHUB_CLIENT_ID}
github.client_secret=${GITHUB_CLIENT_SECRET}
github.replyUrl=${GITHUB_REPLYURL}
github.replyUrlDebug=${GITHUB_REPLYURL_DEBUG}

# 管理员的github的id
user.admin.githubId=${USER_ADMIN_GITHUBID}
user.token.expire=${USER_TOKEN_EXPIRE}

# redis 默认配置数据库为空，如果需要配置数据库，需要在配置文件中配置
spring.redis.host=${SPRING_REDIS_HOST}
spring.redis.port=${SPRING_REDIS_PORT}
spring.redis.password=${SPRING_REDIS_PASSWORD}
spring.redis.database=${SPRING_REDIS_DATABASE}
spring.redis.jedis.pool.max-active=${SPRING_REDIS_JEDIS_POOL_MAX_ACTIVE}
spring.redis.jedis.pool.max-wait=${SPRING_REDIS_JEDIS_POOL_MAX_WAIT}
spring.redis.jedis.pool.max-idle=${SPRING_REDIS_JEDIS_POOL_MAX_IDLE}
spring.redis.jedis.pool.min-idle=${SPRING_REDIS_JEDIS_POOL_MIN_IDLE}
spring.redis.timeout=${SPRING_REDIS_TIMEOUT}
redis.auth2.github=${REDIS_AUTH2_GITHUB}
redis.auth2.outlook=${REDIS_AUTH2_OUTLOOK}
redis.user.token=${REDIS_USER_TOKEN}


page.size = ${PAGE_SIZE}
# ???
# qz_cron = 0/20 * * * * ?


#influx2
spring.influx.url=${SPRING_INFLUX_URL}
spring.influx.token=${SPRING_INFLUX_TOKEN}
spring.influx.org=${SPRING_INFLUX_ORG}
spring.influx.bucket=${SPRING_INFLUX_BUCKET}

# outlook
outlook.authorize.url = ${OUTLOOK_AUTHORIZE_URL}
outlook.errorMsg = ${OUTLOOK_ERRORMSG}
outlook.replyUrl= ${OUTLOOK_REPLYURL}
outlook.replyUrlDebug= ${OUTLOOK_REPLYURL_DEBUG}
outlook.error.countMax= ${OUTLOOK_ERROR_COUNTMAX}
outlook.PluginAPICall= ${OUTLOOK_PLUGINAPICALL}

# web security
web.static.filtrate=${WEB_STATIC_FILTRATE}
web.security.admin=${WEB_SECURITY_ADMIN}
web.security.user=${WEB_SECURITY_USER}
web.security.role_anonymous = ${WEB_SECURITY_ROLE_ANONYMOUS}

# 通知的文件
announcement=${ANNOUNCEMENT}

# 管理员debug的密码
user.admin.debug.passwd=${USER_ADMIN_DEBUG_PASSWD}

# 多线程配置
e5.system.threadPool=${E5_SYSTEM_THREADPOOL}
e5.system.maximumPoolSize=${E5_SYSTEM_MAXIMUMPOOLSIZE}
e5.system.blockingQueueSize=${E5_SYSTEM_BLOCKINGQUEUESIZE}

# 代理的配置
e5.system.proxy_enable=${E5_SYSTEM_PROXY_ENABLE}
e5.system.proxy_host=${E5_SYSTEM_PROXY_HOST}
e5.system.proxy_port=${E5_SYSTEM_PROXY_PORT}

